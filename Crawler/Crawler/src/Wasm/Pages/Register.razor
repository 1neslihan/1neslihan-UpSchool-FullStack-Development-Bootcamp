@page "/register"
@using Application.Features.Auth.Commands.Login;
@using Application.Features.Auth.Commands.Register;
@using Newtonsoft.Json;
@using System.Text;
@using Newtonsoft.Json.Linq;
@layout NoMenuLayout
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime
@inject NavigationManager navigationManager


<PageTitle>Register</PageTitle>

<div class="all Montserrat">
    <div class="row">
        <div class="col-md-6 col-sm-12 d-flex justify-content-center align-items-center" style="background-image: linear-gradient(to bottom, #4F46E5, #120056); height:100vh;">
            <img src="./images/t-android-chrome-512x512.png"
                 alt="Your Company" />
        </div>
        <div class="col-md-6 col-sm-12 text-center" style="height:100vh;">
            <h1 class="mt-5">Sign Up</h1>
            <hr class="mx-auto" style="width:50%; height:2px; color:#4F46E5; opacity:1;" />
            <div class="mx-auto mt-2 mb-2 text-center Montserrat fw-bold" style="color:#F34441; visibility: @(errorMessageShow ? "visible" : "hidden" )">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-exclamation-triangle-fill" viewBox="0 0 16 16">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                </svg> @errorMessage
            </div>
            <form>
                <div style="width:50%;" class="mx-auto text-start">
                    <div class="pb-3">
                        <label for="firstName" class="pb-2 fw-bold text-sm">First Name</label>
                        <input type="text" @bind="firstName" @oninput="HandleFirstNameInput" name="firstName" class="form-control" id="firstName">
                    </div>

                    <div class="pb-4">
                        <label for="lastName" class="pb-2 fw-bold text-sm">Last Name</label>
                        <input type="text" @bind="lastName" @oninput="HandleLastNameInput" name="lastName" class="form-control" id="lastName">
                    </div>

                    <div class="pb-3">
                        <label for="email" class="pb-2 fw-bold text-sm">Email Address</label>
                        <input type="email" @bind="email" @oninput="HandleEmailInput" name="email" class="form-control" id="email">
                    </div>

                    <div class="pb-4">
                        <label for="password" class="pb-2 fw-bold text-sm">Password</label>
                        <input type="password" @bind="password" @oninput="HandlePasswordInput" name="password" class="form-control" id="password">
                    </div>

                </div>
            </form>
            <div class="d-grid gap-2 mx-auto" style="width:50%">
                <button type="submit" class="btn indigo fw-bold" style="border:solid; border-color:#4F46E5;" @onclick="HandleLogin">
                    Login
                </button>
                <button type="submit" class="btn bg-light hoveredBorder fw-bold" style="color:#4F46E5;" @onclick="HandleGoogleLogin">
                    <svg style="height:20px; width:20px;"
                         xmlns="http://www.w3.org/2000/svg"
                         xmlnsXlink="http://www.w3.org/1999/xlink"
                         width="800px"
                         height="800px"
                         viewBox="-0.5 0 48 48"
                         version="1.1">
                        {" "}
                        <title>Google-color</title>
                        <desc>Created with Sketch.</desc>{" "}
                        <defs> </defs>{" "}
                        <g id="Icons"
                           stroke="none"
                           strokeWidth="1"
                           fill="none"
                           fillRule="evenodd">
                            {" "}
                            <g id="Color-" transform="translate(-401.000000, -860.000000)">
                                {" "}
                                <g id="Google" transform="translate(401.000000, 860.000000)">
                                    {" "}
                                    <path d="M9.82727273,24 C9.82727273,22.4757333 10.0804318,21.0144 10.5322727,19.6437333 L2.62345455,13.6042667 C1.08206818,16.7338667 0.213636364,20.2602667 0.213636364,24 C0.213636364,27.7365333 1.081,31.2608 2.62025,34.3882667 L10.5247955,28.3370667 C10.0772273,26.9728 9.82727273,25.5168 9.82727273,24"
                                          id="Fill-1"
                                          fill="#FBBC05">
                                        {" "}
                                    </path>{" "}
                                    <path d="M23.7136364,10.1333333 C27.025,10.1333333 30.0159091,11.3066667 32.3659091,13.2266667 L39.2022727,6.4 C35.0363636,2.77333333 29.6954545,0.533333333 23.7136364,0.533333333 C14.4268636,0.533333333 6.44540909,5.84426667 2.62345455,13.6042667 L10.5322727,19.6437333 C12.3545909,14.112 17.5491591,10.1333333 23.7136364,10.1333333"
                                          id="Fill-2"
                                          fill="#EB4335">
                                        {" "}
                                    </path>{" "}
                                    <path d="M23.7136364,37.8666667 C17.5491591,37.8666667 12.3545909,33.888 10.5322727,28.3562667 L2.62345455,34.3946667 C6.44540909,42.1557333 14.4268636,47.4666667 23.7136364,47.4666667 C29.4455,47.4666667 34.9177955,45.4314667 39.0249545,41.6181333 L31.5177727,35.8144 C29.3995682,37.1488 26.7323182,37.8666667 23.7136364,37.8666667"
                                          id="Fill-3"
                                          fill="#34A853">
                                        {" "}
                                    </path>{" "}
                                    <path d="M46.1454545,24 C46.1454545,22.6133333 45.9318182,21.12 45.6113636,19.7333333 L23.7136364,19.7333333 L23.7136364,28.8 L36.3181818,28.8 C35.6879545,31.8912 33.9724545,34.2677333 31.5177727,35.8144 L39.0249545,41.6181333 C43.3393409,37.6138667 46.1454545,31.6490667 46.1454545,24"
                                          id="Fill-4"
                                          fill="#4285F4">
                                        {" "}
                                    </path>{" "}
                                </g>{" "}
                            </g>{" "}
                        </g>{" "}
                    </svg>
                    Continue with Google
                </button>
            </div>
        </div>

    </div>
</div>


@code {
    private const string BASE_URL = "https://localhost:7090/api";
    private bool errorMessageShow = false;
    private string errorMessage;
    private string firstName;
    private string lastName;
    private string email;
    private string password;


    public async Task HandleLogin(MouseEventArgs e)
    {
        // email ve password değerleri burada kullanılabilir
        // Örneğin: Veritabanı ile karşılaştırma, kimlik doğrulama işlemleri, vb.
        var registerRequest = new AuthRegisterCommand()
            {
                FirstName= firstName,
                LastName= lastName,
                Email = email,
                Password = password
            };


        try
        {
            var registerResponse = await SendHttpPostRequest<AuthRegisterCommand, object>(httpClient, $"{BASE_URL}/Authentication/Register", registerRequest);
            navigationManager.NavigateTo("/login");

        }
        catch (HttpRequestException ex)
        {
            if (password.Count()<6)
            {
                errorMessage = "Passwords min contains 6 character.";
            }

            else
            {
                errorMessage = "This e-mail already been registered.";
            }

            errorMessageShow = true;
        }



    }

    private void HandleGoogleLogin()
    {
        navigationManager.NavigateTo($"{BASE_URL}/Authentication/GoogleSignInStart");
    }

    private void HandleFirstNameInput(ChangeEventArgs e)
    {
        firstName = e.Value.ToString();

    }

    private void HandleLastNameInput(ChangeEventArgs e)
    {
        lastName = e.Value.ToString();

    }

    private void HandleEmailInput(ChangeEventArgs e)
    {
        email = e.Value.ToString();

    }

    private void HandlePasswordInput(ChangeEventArgs e)
    {
        password = e.Value.ToString();

    }

    public async Task<TResponse> SendHttpPostRequest<TRequest, TResponse>(HttpClient httpClient, string url, TRequest payload)
    {
        var jsonPayload = JsonConvert.SerializeObject(payload);
        var httpContent = new StringContent(jsonPayload, Encoding.UTF8, "application/json");

        // Authorization başlığını ayarla
        //httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", jwtToken);


        var response = await httpClient.PostAsync(url, httpContent);
        response.EnsureSuccessStatusCode();

        var jsonResponse = await response.Content.ReadAsStringAsync();
        var responseObject = JsonConvert.DeserializeObject<TResponse>(jsonResponse);

        return responseObject;
    }

}

<style>

    .Montserrat {
        font-family: 'Montserrat', sans-serif;
    }

    .all {
        padding: 0 0 0 0 !important;
    }

    .content {
        padding-top: 0 !important;
        padding-right: 0 !important;
        padding-left: 0 !important;
    }

    .row {
        margin-left: 0 !important;
        margin-right: 0 !important;
    }

    .col-md-6, .col-sm-12 {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }

    .indigo {
        background-color: #4F46E5;
        color: white;
    }

        .indigo:hover {
            opacity: 0.85;
            color: white;
        }

    .hoveredBorder {
        border: solid;
        border-color: white;
    }

        .hoveredBorder:hover {
            border: solid;
            border-color: #4F46E5;
        }
</style>
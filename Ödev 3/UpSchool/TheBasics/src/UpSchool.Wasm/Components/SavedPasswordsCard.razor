@using UpSchool.Wasm.Common.Utilities;


<div class="row justify-content-center text-center">
    <div class="col-md-6">
        <div class="card mt-3">
            <div class="card-header">
                <div class="card-title text-success">
                    <h2>
                        Saved Passwords
                    </h2>
                </div>
            </div>
            <div class="card-body">
                <div class="mt-2">
                    @if (savedPasswords.Any())
                    {
                        <ul class="list-group">
                            @foreach (var savedPassword in savedPasswords)
                            {
                                <li class="@($"list-group-item text-white d-flex {CssUtilities.GetCssColorClassForPasswords(savedPassword.Length)}")">
                                    <span class="clickable me-3 ms-auto" @onclick="@(CopyToClipBoardAsync)" >@savedPassword</span>
                                    <span  @onclick="@(() => DeletePasswordAsyncCallBack.InvokeAsync(savedPassword))" class="oi oi-trash clickable ms-auto trash-active" aria-hidden="true"></span>

                                </li>
                            }

                        </ul>
                    }
                    else
                    {
                        <div class="text-black-center">
                            <h5>There is no passwords here</h5>
                        </div>
                    }

                </div>
            </div>
            <div class="card-footer d-flex justify-content-between">
                
                 <button class="btn btn-outline-info" @onclick="@(() => FetchPasswordAsyncCallBack.InvokeAsync())">Refresh</button>
               
                 <button class="btn btn-outline-danger" @onclick=@ClearSavedPassword>Clear</button>
               
                
                @*<hr class=@CssColourClass style="height: 2vh !important " />*@
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<string> savedPasswords { get; set; }

    [Parameter]
    public EventCallback OnCopyToClipBoardAsync { get; set; } 

    [Parameter]
    public EventCallback OnClearSavedPassword { get; set; }

    [Parameter]
    public EventCallback GetCssColorClass { get; set; }

    [Parameter]
    public EventCallback FetchPasswordAsyncCallBack { get; set; }

    [Parameter]
    public EventCallback<string> DeletePasswordAsyncCallBack { get; set; }

    private Task CopyToClipBoardAsync()
    {
        return OnCopyToClipBoardAsync.InvokeAsync();
    }

    private Task ClearSavedPassword()
    {
        return OnClearSavedPassword.InvokeAsync();
    }

    

    
}
